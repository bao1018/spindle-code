import os

DEBUG = True
TEMPLATE_DEBUG = DEBUG

ADMINS = (
    ('Your Name', 'Your Email'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '',                      # Or path to database file if using sqlite3.
        'USER': '',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    }
}

# Make this unique, and don't share it with anybody.
SECRET_KEY = ''

EMAIL_HOST = ''
EMAIL_IMAP = ''
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_SUBJECT_PREFIX = ''

#----------------------------------------
# Spindle settings
#----------------------------------------

# URL of an RSS feed to scrape audio and video from
SPINDLE_SCRAPE_RSS_URL = ''
 
# The absolute path to the Sphinx installation, so that
# SPINDLE_SPHINX_DIRECTORY/bin/Transcriber.jar is the appropriate .jar
# file
SPINDLE_SPHINX_DIRECTORY = ''

# A directory where Sphinx output and logging information will be saved
# If this is blank, will use a default temporary file directory
SPINDLE_SPHINX_OUTPUT_DIRECTORY = ''

# A public directory for published captions and transcirpts
SPINDLE_PUBLIC_DIRECTORY = '/Users/jonathan/ox-it/spindle/web/demo/media'

# URL for published items
SPINDLE_PUBLIC_URL = 'http://localhost:8000/media/'

# Filename for the RSS feed of exported plain text and keywords.  The
# full URL will be SPINDLE_PUBLIC_URL/SPINDLE_PUBLISH_RSS_NAME and the
# full filename will be
# SPINDLE_PUBLIC_DIRECTORY/SPINDLE_KEYWORDS_RSS_NAME .
SPINDLE_KEYWORDS_RSS_FILENAME = 'keywords.rss'

# Filename for the RSS feed of exported text, html and srt
SPINDLE_EXPORTS_RSS_FILENAME = 'exports.rss'

# Significance cutoff for keyword inclusion in RSS
SPINDLE_KEYWORD_LL_THRESHOLD = 40

# Authentication for Koemei (koemei.com)
SPINDLE_KOEMEI_USERNAME = ''
SPINDLE_KOEMEI_PASSWORD = ''

# Celery asynchronous task setup
CELERYD_CONCURRENCY = 1
CELERYD_MAX_TASKS_PER_CHILD = 1

# By default, Celery will use the Django database as its message
# queue. This means that all Celery processes must run on the local
# machine.
BROKER_URL = 'django://'

# Uncomment the lines below to configure RabbitMQ so that
# transcription tasks can run distributed over the network.  This will
# require installing RabbitMQ and additional configuration steps.

# BROKER_URL = 'amqp://user:password@localhost/spindle'
# CELERY_RESULT_BACKEND = 'amqp'


#------------------------------
# Cache
#------------------------------

# A working cache backend MUST be configured for operations involving
# Celery tasks to work properly.
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'django_cache_table',
    }
}
